#!/usr/bin/env python3
# -*- coding: utf-8 -*-

from PyQt5.QtWidgets import QMessageBox, QHBoxLayout, QPushButton
from PyQt5.QtWidgets import QDialog, QApplication, QComboBox
import subprocess
import os
import shlex
import ipaddress

_HISTFILE = os.path.expanduser("~/.config/qt-freerdp-launcherrc")


class HistoryFile():
    def __init__(self):

        def filter_lines(line):
            if len(line) > 1 and ipaddress.ip_address(line.strip()):
                return line.strip()
            else:
                return ""

        self.file = open(_HISTFILE, "a+")
        self.file.seek(0)
        self.lines = list(set(
            map(
                filter_lines,
                self.file.readlines()
            )
        ))

    def write_lines(self):
        self.file.seek(0)
        self.file.truncate()
        for ip in set(self.lines[::-1][:5]):
            # reverse the list (last connected in front) and limit to 5
            self.file.write("{}\n".format(ip))


class MyDialog(QDialog):
    def __init__(self):
        super().__init__()

        self.setWindowTitle("Connect to RDP")
        self.resize(300, 0)
        layout = QHBoxLayout(self)
        self.ip = QComboBox(self)
        self.ip.setEditable(True)
        self.history = HistoryFile()
        self.ip.insertItems(0, self.history.lines)
        self.connect = QPushButton("Connect")
        layout.addWidget(self.ip)
        layout.addWidget(self.connect)
        self.connect.clicked.connect(self.testfunc)

    def show_error(self, message):
        msg = QMessageBox()
        msg.setIcon(QMessageBox.Critical)
        msg.setText("Error")
        msg.setInformativeText(message)
        msg.setWindowTitle("Error")
        msg.exec_()

    def testfunc(self):
        _ip = self.ip.currentText().strip()
        try:
            ipaddress.ip_address(_ip)
        except ValueError:
            return self.show_error("IP address is invalid")
        except Exception:
            return self.show_error("IP address is required")

        env = os.environ.copy()
        env["SDL_VIDEODRIVER"] = "wayland"
        env["SDL_WINDOW_ALLOW_HIGHDPI"] = "1"
        cmd = shlex.split("\
        flatpak run --command=sdl-freerdp com.freerdp.FreeRDP \
        /v:{} +dynamic-resolution +clipboard /sec:nla \
        /gfx:progressive,avc444,mask:0xf0 /network:auto /rfx /f /scale:140 \
        /drive:~/Downloads,Download /auto-reconnect-max-retries:retries:10 \
        +auto-reconnect".format(_ip))
        subprocess.Popen(cmd, env=env)

        self.history.lines.insert(0, _ip)
        self.history.write_lines()
        self.close()
        return


if __name__ == '__main__':
    app = QApplication([])
    dg = MyDialog()
    dg.exec()
